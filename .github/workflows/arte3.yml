name: image_build_more
on:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-20.04
    steps:
      -
        run: |
          wget https://www.armbian.com/userdata.csv
          mkdir temp
          cp userdata.csv temp/
      - name: Cache Gradle packages
        uses: actions/cache@v2
        env:
          cache-name: cache-build
        with:
          path: temp
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/lockfiles') }}

  "A": # short name because GH will expand with the matrix values
    needs: [ prepare ]
    runs-on: ubuntu-20.04
    timeout-minutes: 480
    strategy:
      fail-fast: false # let other jobs try to complete if one fails
      matrix:
        include:
          - board: bananapi
            desc: Mirroring Bananapi
            vars: bananapi
            aaaa: 2

          - board: bananapim2plus
            desc: Mirroring Bananapi M2
            vars: bananapim2
            aaaa: 3

    steps:
      - name: Cache Gradle packages
        uses: actions/cache@v2
        env:
          cache-name: cache-build
        with:
          path: temp
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}

      - 
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      -
        id: image-build
        run: |        

          cat temp1/userdata.csv | grep "${{ matrix.board }}/" | grep -v nightly | cut -d"|" -f2

          #wget https://dl.armbian.com/bananapi/archive/Armbian_21.05.1_Bananapi_buster_current_5.10.34_xfce_desktop.img.xz
          #wget https://dl.armbian.com/bananapi/archive/Armbian_21.05.1_Bananapi_buster_current_5.10.34_minimal.img.xz
          #cat temp1/userdata.csv

          BOARD="${{ matrix.board }}/"
          DEBUG="yes"
          FILES=$(cat temp/userdata.csv | grep ${BOARD}"/" | grep -v nightly | cut -d"|" -f2) # exclude nightly
          MIRRORS=$(curl -sq http://redirect.armbian.com/mirrors | jq -M -r | tr -d \" | grep http | grep -v f_oss | tr -d , | tr -d " " | sort| uniq) 

          for FILE in ${FILES[@]}
          do
            PARALLEL=$(
            for k in ${MIRRORS[@]}
            do
              echo "$k$j"
            done | parallel --halt now,fail=1 --jobs 32 wget -q --spider --timeout=5 --tries=2 --retry-connrefused {} 2>&1 >/dev/null)

            if [[ -n "${PARALLEL}" ]]; then
              REMOVE=$(echo $PARALLEL | egrep -o 'https?://[^ ]+/' | sed "s/$BOARD.*//" | sort | uniq)
              for l in ${REMOVE[@]}; do
                [[ "${DEBUG}" == yes ]] && echo "Removing mirror: $l"
                MIRRORS=$(echo "${MIRRORS}" | sed "s|$l ||")
              done
              [[ $DEBUG == yes ]] && echo "Timeout: $(echo $PARALLEL | egrep -o 'https?://[^ ]+/' | cut -d"/" -f1-4 | sort | uniq)/${BOARD}/archive/$(echo $PARALLEL | egrep -o 'https?://[^ ]+' | rev | cut -d / -f 1 | rev)"
            fi

          # download
          DOWNLOAD="axel -c -a "
          for m in ${MIRRORS[@]}; do
              DOWNLOAD=${DOWNLOAD}" $m$FILE"
          done
          eval "${DOWNLOAD}"
          done

      - 
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Armbian*
          tag: ${{ matrix.vars }}
          overwrite: true
          file_glob: true

